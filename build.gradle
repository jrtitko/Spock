plugins {
    id 'org.springframework.boot' version '2.2.3.RELEASE'
    id "org.unbroken-dome.test-sets" version "2.2.1"
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'groovy'
    id 'jacoco'
}

apply from: 'gradle/integrationTest.gradle'
apply from: 'gradle/codeCoverage.gradle'

group = 'com.industriousgnomes'
version = '1.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    // Lombok setup
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // mandatory dependencies for using Spock
    implementation "org.codehaus.groovy:groovy-all:2.5.9"
    testImplementation "org.spockframework:spock-core:1.3-groovy-2.5"
//    testImplementation "org.spockframework:spock-spring:1.3-groovy-2.5"  // required to use spring // may no longer be needed

    // optional dependencies for using Spock
    testCompile "org.hamcrest:hamcrest-core:2.2"    // only necessary if Hamcrest matchers are used
    testRuntime "net.bytebuddy:byte-buddy:1.10.6"   // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:3.1"       // allows mocking of classes without default constructor (together with CGLIB)

    // Used in these examples, otherwise not necessary
//    testCompile "org.spockframework:spock-junit4"   // For using JUnit 4 rules
    runtimeOnly 'com.h2database:h2' // For using in-memory database
}

test {
    useJUnitPlatform()
}
