plugins {
    id 'org.springframework.boot' version '2.2.3.RELEASE'
    id "org.unbroken-dome.test-sets" version "2.2.1"
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id "com.github.erdi.webdriver-binaries" version "2.2"   // GEB
    id "com.github.erdi.idea-base" version "2.2"            // GEB
    id 'groovy'
    id 'jacoco'
}

apply from: 'gradle/integrationTest.gradle'
apply from: 'gradle/codeCoverage.gradle'

group = 'com.industriousgnomes'
version = '1.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    // Lombok setup
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // mandatory dependencies for using Spock
    implementation "org.codehaus.groovy:groovy-all:2.5.9"
    testImplementation "org.spockframework:spock-core:1.3-groovy-2.5"

    // optional dependencies for using Spock
    testCompile "org.hamcrest:hamcrest-core:2.2"    // only necessary if Hamcrest matchers are used
    testRuntime "net.bytebuddy:byte-buddy:1.10.6"   // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:3.1"       // allows mocking of classes without default constructor (together with CGLIB)

    // Used in these examples, otherwise not necessary
    runtimeOnly 'com.h2database:h2' // For using in-memory database

    // GEB web testing
    testImplementation "org.gebish:geb-spock:3.3"
    testCompile "org.seleniumhq.selenium:selenium-chrome-driver:3.14.0"
}

// GEB vvvvvvvvvvvvvvv
ext {
    // The drivers we want to use
    drivers = ["chrome", "chromeHeadless"]

    ext {
        chromeDriverVersion = '80.0.3987.16'
        geckoDriverVersion = '0.26.0'
    }
}

webdriverBinaries {
    chromedriver {
        version = chromeDriverVersion
        fallbackTo32Bit = true
    }
    geckodriver geckoDriverVersion
}

drivers.each { driver ->
    task "${driver}Test"(type: Test) {
        group JavaBasePlugin.VERIFICATION_GROUP

        outputs.upToDateWhen { false }  // Always run tests

        systemProperty "geb.build.reportsDir", reporting.file("geb/$name")
        systemProperty "geb.env", driver
    }
}

test {
    dependsOn drivers.collect { tasks["${it}Test"] }
    enabled = false
}

tasks.withType(Test) {
    maxHeapSize = "1g"
    jvmArgs '-XX:MaxMetaspaceSize=128m'
    testLogging {
        exceptionFormat = 'full'
    }
}

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.memoryMaximumSize = '256m'
}
// GEB ^^^^^^^^^^^^^^^
